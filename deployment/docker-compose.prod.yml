version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: collabboard-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    container_name: collabboard-backend
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/realtime_collab_prod
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
    depends_on:
      - mongo
    restart: unless-stopped
    volumes:
      - ../backend/logs:/app/logs

  frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.frontend
    container_name: collabboard-frontend
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  mongo:
    image: mongo:5.0
    container_name: collabboard-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=realtime_collab_prod

  watchtower:
    image: containrrr/watchtower
    container_name: collabboard-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    restart: unless-stopped

volumes:
  mongo-data:
    driver: local